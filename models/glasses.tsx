/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube002: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

export function Model(
  props: JSX.IntrinsicElements["group"] & { scrollTop: number }
) {
  const { nodes, materials } = useGLTF("/glasses.gltf") as GLTFResult;
  const scale = (4 + (props.scrollTop / 0.314) * 6) / 100;

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        material-color="white"
        geometry={nodes.Cube002.geometry}
        material={materials.Material}
        position={[props.scrollTop / 0.314, 0, 0]}
        rotation={[0, props.scrollTop, 0]}
        scale={scale}
      />
    </group>
  );
}

useGLTF.preload("/glasses.gltf");
